I"±<p>Asset Library is a series of pipeline tools I‚Äôve created for my own personal projects.</p>

<p>The main goals of these are to maximize the efficiency of bringing asset types from many DCC Packages to the final game.</p>

<p>It‚Äôs all a somewhat personal solution to my own project needs, and is constantly evolving, but since it‚Äôs starting to morph into a tangible set of tools I thought writing a post on it could be interesting.</p>

<hr />

<h2 id="substance-designer">Substance Designer</h2>

<h3 id="material-export">Material Export</h3>

<p><img src="https://www.dropbox.com/s/3pht3ym28hzwvlb/material_editor.png?raw=1" alt="Image" class="center-image" /></p>

<p>This is a tool used to automatically export a material and all variants from Substance Designer to the Asset Library. When the exporter is ran, all textures are re-exported, and the .material file is updated with any edited parameters.</p>

<h3 id="material-refresh">Material Refresh</h3>

<p><img src="https://www.dropbox.com/s/srujsjv4kfttc8g/designer_to_unreal.png?raw=1" alt="Image" class="center-image" /></p>

<p>One of the nicest parts of the material pipeline is the ‚ÄúImport to Unreal Engine‚Äù sub-tool. Whevever this is ran, the current material is exported from Substance Designer, and reimported to Unreal with all of the new textures.</p>

<p>This means I no longer have to nagivate to the updated material and manually reimport all dependent textures. Instead it‚Äôs a single button press.</p>

<h3 id="material-import">Material Import</h3>

<p>This loads a .sbs file from a target exported material. Nothing too special. But can save a couple of mouse clicks.</p>

<hr />

<h2 id="unreal-engine">Unreal Engine</h2>

<h3 id="material-import-1">Material Import</h3>

<p>This takes the data for a material as exported from Substance Designer, and automatically imports it to Unreal Engine, along with the whole dependency stack (all referenced textures).</p>

<p>It also creates a new Material Instance from a list of predefined Master Materials/Shaders available to the Asset Library, and sets all of the child parameters accordingly.</p>

<p><img src="https://www.dropbox.com/s/tzy21d3emm1lsfs/unreal_import.png?raw=1" alt="Image" class="center-image" /></p>

<h3 id="material-export-1">Material Export</h3>

<p>This tool will serialize all materials currently found inside the Unreal project to .material files, including their parameters, and textures relative to the asset library.</p>

<p>This is useful for tweaking materials in the editor, while still being able to export them out to the asset library for editing in other external DCC applications.</p>

<hr />

<h2 id="3ds-max">3DS Max</h2>

<h3 id="geometry-exporter">Geometry Exporter</h3>

<p>This tool will export the currently opened 3DS Max scene to either a single FBX file, or a series of FBX files.</p>

<p>The exporter currently has two modes:</p>

<ul>
  <li>
    <p>Single Export: This will export the whole file to a single .fbx file if only a single sub-mesh is found</p>
  </li>
  <li>
    <p>Multi Export: This will export a series of meshes from a single file. The exporter looks for all layers that start with ‚ÄúSM_‚Äù as this is used to denote child meshes.</p>
  </li>
</ul>
:ET